name: Deploy to ECR

on:
 
  push:
    branches: [ main ]

env:
    API_KEY: ${{ secrets.API_KEY }}

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    
    - name: Test
      run: |
        if ["$API_KEY" == "3ff7e7fd6d5dfaa54dc83a776a962a50"]
        then
          echo "Working"
        fi
      env: |
       API_KEY: ${{ secrets.API_KEY }}
    
    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Get image digest for old image
      id: get-image-digest
      run: |
        DIGEST=$(aws ecr list-images --repository-name rs_movie_repo --filter tagStatus=TAGGED --query 'imageIds[?imageTag==`latest`].imageDigest' --output text)
        echo "::set-output name=digest::$DIGEST"

    - name: Delete old image from ECR
      if: steps.get-image-digest.outputs.digest != ''
      run: |
        aws ecr batch-delete-image --repository-name rs_movie_repo --image-ids imageDigest=${{ steps.get-image-digest.outputs.digest }}


    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rs_movie_repo
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Update Lambda function with latest ECR image
      env:
        LAMBDA_NAME: test
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: rs_movie_repo
        IMAGE_TAG: latest
      run: |
        aws lambda update-function-code \
        --function-name $LAMBDA_NAME \
        --image-uri $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
